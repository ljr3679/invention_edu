<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">
	
	<bean id="propertyConfigurer" class="cms.enc.PropertyPlaceholderConfigurerWithCrypt">
		<property name="locations">
			<list>
				<value>classpath:/cms/property/globals.properties</value>
				<value>classpath:/cms/property/db.properties</value>
			</list>
		</property>
		<property name="textEncryptionService" ref="textEncryptionService" />
	</bean>
	<bean id="textEncryptionService" class="cms.enc.TextEncryptionService" />
	
	<bean id="customDataSource" class="cms.config.CustomDataSource" destroy-method="close">
		<constructor-arg value="${gbls.dbms.type}"/>
		<constructor-arg value="${db.mysql.driverClassName}"/>
		<constructor-arg value="${db.mysql.url}"/>
		<constructor-arg value="${db.mysql.username}"/>
		<constructor-arg value="${db.mysql.password}"/>
		<constructor-arg value="${db.oracle.driverClassName}"/>
		<constructor-arg value="${db.oracle.url}"/>
		<constructor-arg value="${db.oracle.username}"/>
		<constructor-arg value="${db.oracle.password}"/>
		<constructor-arg value="${db.mssql.driverClassName}"/>
		<constructor-arg value="${db.mssql.url}"/>
		<constructor-arg value="${db.mssql.username}"/>
		<constructor-arg value="${db.mssql.password}"/>
		<constructor-arg value="${db.postgresql.driverClassName}"/>
		<constructor-arg value="${db.postgresql.url}"/>
		<constructor-arg value="${db.postgresql.username}"/>
		<constructor-arg value="${db.postgresql.password}"/>
		
		<property name="testWhileIdle" value="true"/> 
	    <property name="timeBetweenEvictionRunsMillis" value="7200000"/>
	</bean>
	
	<!-- SQL 로깅  -->
	<bean id="dataSourceForLog" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="customDataSource" />
		<property name="logFormatter">
			<bean class="cms.config.Log4jJdbcLogFormatterForMybatis">
				<property name="loggingType" value="MULTI_LINE" />				
			</bean>
		</property>
	</bean>
	
	<alias name="dataSourceForLog" alias="dataSource" />

</beans>
